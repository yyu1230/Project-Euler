

print('''
Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.

Answer: 4613732\n''')

print('Method 1: Computational Brute Force')

def fibncc(n):
    if n==1: return 1
    if n==2: return 2
    return fibncc(n-1)+fibncc(n-2)

ans = 0
for i in range(2,int(4e6),3):
    f = fibncc(i)
    if f>4e6: break
    ans += f

print(ans, '\n')


print('Method 2: Computational Brute Force with Mathematical Simplification')

fibncc2 = [2, 8]
# fibncc2(n) = 4 * fibncc2(n-1) + fibncc2(n-2)

ans = 2+8
for i in range(2,int(4e6)):
    f = 4 * fibncc2[i-1] + fibncc2[i-2]
    if f>4000000: break
    fibncc2.append(f)
    ans += f

print(ans, '\n')

